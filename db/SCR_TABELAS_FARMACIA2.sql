CREATE TABLE CATEGORIA (
	CODCAT SERIAL NOT NULL, 
	DESCAT varchar(100) NOT NULL, 
	PRIMARY KEY (CODCAT)
);

CREATE TABLE CONTAS_PAGAR (
	CODCONPAG SERIAL NOT NULL,
	VALCONPAG numeric(9, 2) NOT NULL, 
	PARCONPAG numeric(9, 2) NOT NULL, 
	DATREGCONPAG numeric(9, 2) NOT NULL, 
	DATFINCONPAG date NOT NULL, 
	DIAMESPAGCONPAG int4, 
	CGCTRS varchar(18) NOT NULL, 
	PRIMARY KEY (CODCONPAG)
);
COMMENT ON TABLE CONTAS_PAGAR IS 'Tabela para armazenar os dados de contas de saída da empresa, como água, luz, funcionarios, compra de produtos etc.';


CREATE TABLE CONTAS_RECEBER (
	CODCONREC SERIAL NOT NULL, 
	VALCONREC numeric(9, 2) NOT NULL, 
	PARCONREC numeric(9, 2) NOT NULL, 
	DARREGCONREC numeric(9, 2) NOT NULL, 
	DATFINCONREC date NOT NULL, 
	DIAMESPAGCONREC int4 NOT NULL, 
	CGCTRS varchar(18) NOT NULL, 
	PRIMARY KEY (CODCONREC)
);
COMMENT ON TABLE CONTAS_RECEBER IS 'Tabela para armazenar os dados das despesas de entrada para empresa, como crediário, etc.';
COMMENT ON COLUMN CONTAS_RECEBER.VALCONREC IS 'valor da conta a receber';
COMMENT ON COLUMN CONTAS_RECEBER.PARCONREC IS 'parcelas da conta a receber';
COMMENT ON COLUMN CONTAS_RECEBER.DARREGCONREC IS 'data de registro da conta a receber';
COMMENT ON COLUMN CONTAS_RECEBER.DATFINCONREC IS 'data final da conta a receber';
COMMENT ON COLUMN CONTAS_RECEBER.DIAMESPAGCONREC IS 'Dia do mes de pagamento';


CREATE TABLE EMPRESA_PRODUTO (
	CGCTRS varchar(18) NOT NULL, 
	CODPRO int4 NOT NULL, 
	EMPPROPREFOR numeric(9, 2) NOT NULL, 
	PRIMARY KEY (CGCTRS, CODPRO)
);
COMMENT ON COLUMN EMPRESA_PRODUTO.EMPPROPREFOR IS 'Preço por fornecedor do produto';


CREATE TABLE ESTOQUE (
	CODEST SERIAL NOT NULL, 
	DATREGEST date NOT NULL, 
	TIPOPEEST char(1) NOT NULL, 
	NUMNOTEST int4 NOT NULL, 
	CGCTRS varchar(18) NOT NULL, 
	PRIMARY KEY (CODEST)
);


CREATE TABLE ESTOQUE_ITEM (
	CODESTITM SERIAL NOT NULL, 
	QTDESTITM numeric(9, 3) NOT NULL,
	VLRBRTESTITM numeric(9, 2) NOT NULL, 
	VRLLIQESTITM numeric(9, 2) NOT NULL, 
	VLRDESESTITM numeric(9, 2) NOT NULL, 
	VRLACRESTITM numeric(9, 2) NOT NULL, 
	CODEST int4 NOT NULL, 
	CODPRO int4 NOT NULL,
	PRIMARY KEY (CODESTITM)
);
COMMENT ON COLUMN ESTOQUE_ITEM.QTDESTITM IS 'Quantidade do intem no estoque';
COMMENT ON COLUMN ESTOQUE_ITEM.VLRBRTESTITM IS 'Valor bruto do produto no estoque';
COMMENT ON COLUMN ESTOQUE_ITEM.VRLLIQESTITM IS 'Valor liquido do produto no estoque';
COMMENT ON COLUMN ESTOQUE_ITEM.VLRDESESTITM IS 'Valor de desconto no item no estoque';
COMMENT ON COLUMN ESTOQUE_ITEM.VRLACRESTITM IS 'Valor acréscimo do item';


CREATE TABLE FUNCIONARIO (
	CODFUN SERIAL NOT NULL, 
	SALFUN numeric(9, 2) NOT NULL, 
	DATENTFUN date NOT NULL, 
	DATSAIFUN date, 
	CGCTRS varchar(18) NOT NULL, 
	PRIMARY KEY (CODFUN)
);


CREATE TABLE PRODUTO (
	CODPRO SERIAL NOT NULL, 
	NOMPRO varchar(20) NOT NULL, 
	FABPRO varchar(20) NOT NULL, 
	VALCOMPRO numeric(9, 2) NOT NULL, 
	VALVENPRO numeric(9, 2) NOT NULL, 
	PERDESPRO numeric(4, 2), 
	ESPPRO varchar(20), 
	QUAPRO int4 NOT NULL, 
	DATCADPRO date NOT NULL, 
	CODTABDES int4 NOT NULL, 
	CODCAT int4 NOT NULL, 
	CODTABPRE int4 NOT NULL, 
	CONSTRAINT PRODUTOS_PK PRIMARY KEY (CODPRO)
);
COMMENT ON TABLE PRODUTO IS 'TABELA PARA CADASTRO DE DADOS DOS PRODUTOS';
COMMENT ON COLUMN PRODUTO.CODPRO IS 'CÓDIGO DO PRODUTO.';
COMMENT ON COLUMN PRODUTO.NOMPRO IS 'NOME DO PRODUTO.';
COMMENT ON COLUMN PRODUTO.FABPRO IS 'NOME DO FABRICANTE DO PRODUTO.';
COMMENT ON COLUMN PRODUTO.VALCOMPRO IS 'VALOR DE COMPRA DO PRODUTO';
COMMENT ON COLUMN PRODUTO.VALVENPRO IS 'VALOR DE VENDA DO PRODUTO.';
COMMENT ON COLUMN PRODUTO.PERDESPRO IS 'PERCENTUAL DE DESCONTO NO PRODUTO.';
COMMENT ON COLUMN PRODUTO.ESPPRO IS 'ESPECIFIÇÃO DO PRODUTO';
COMMENT ON COLUMN PRODUTO.QUAPRO IS 'QUANTIDADE DE COMPRA DO PRODUTO';
COMMENT ON COLUMN PRODUTO.DATCADPRO IS 'DATA DE CADASTRO DO PRODUTO NO SISTEMA';
COMMENT ON COLUMN PRODUTO.CODTABDES IS 'Chave estrangeira da tabela de desconto';


CREATE TABLE PROMOCAO (
	CODPMC SERIAL NOT NULL, 
	DSCPMC varchar(100) NOT NULL, 
	DATINIPMC date NOT NULL, 
	DATFINPMC date NOT NULL, 
	TIPPMC char(1) NOT NULL, 
	CODTABPRE int4 NOT NULL, 
	CODTABDES int4 NOT NULL, 
	PRIMARY KEY (CODPMC)
);


CREATE TABLE PROMOCAO_ITEM (
	CODPMCITM SERIAL NOT NULL, 
	QTDPMCITM numeric(9, 2) NOT NULL, 
	PREPMCITM numeric(9, 2), 
	PERDESPMCITM numeric(4, 2), 
	CODPMC int4 NOT NULL, 
	CODPRO int4 NOT NULL, 
	PRIMARY KEY (CODPMCITM)
);
COMMENT ON COLUMN PROMOCAO_ITEM.QTDPMCITM IS 'Quantidade de itens em promoção';
COMMENT ON COLUMN PROMOCAO_ITEM.PREPMCITM IS 'preço diferenciado do item';
COMMENT ON COLUMN PROMOCAO_ITEM.PERDESPMCITM IS 'percentual de desconto do item na promoção';


CREATE TABLE TABELA_DESCONTO (
	CODTABDES SERIAL NOT NULL, 
	PERDES numeric(4, 2) NOT NULL, 
	DESCTABDES varchar(100) NOT NULL, 
	CONSTRAINT DESCONTO_PK PRIMARY KEY (CODTABDES)
);
COMMENT ON TABLE TABELA_DESCONTO IS 'PERCENTUAL DE DESCONTO SOBRE A VENDA';
COMMENT ON COLUMN TABELA_DESCONTO.CODTABDES IS 'Código do registro da tabela de descontos';
COMMENT ON COLUMN TABELA_DESCONTO.PERDES IS 'Percentual de desconto';
COMMENT ON COLUMN TABELA_DESCONTO.DESCTABDES IS 'Descrição do desconto (Ex. Cliente preferencial, etc.)';


CREATE TABLE TABELA_PRECO (
	CODTABPRE SERIAL NOT NULL, 
	PRETABPRE numeric(9, 2) NOT NULL, 
	DESTABPRE varchar(50) NOT NULL, 
	PRIMARY KEY (CODTABPRE)
);
COMMENT ON COLUMN TABELA_PRECO.PRETABPRE IS 'preço diferenciado da tabela';
COMMENT ON COLUMN TABELA_PRECO.DESTABPRE IS 'DESCRIÇÃO TABELA DE PREÇO';


CREATE TABLE TIPO_TRANSACIONADOR (
	CODTIPTRS SERIAL NOT NULL, 
	TIPTRS char(1) NOT NULL, 
	DSCTIP varchar(100) NOT NULL, 
	TIPPESTRS int4 NOT NULL, 
	PRIMARY KEY (CODTIPTRS)
);
COMMENT ON TABLE TIPO_TRANSACIONADOR IS 'Tabela para armazenar o tipo de transacionador, como fornecedores, empresa atual, clientes, clientes preferenciais, etc';


CREATE TABLE TRANSACIONADOR (
	CGCTRS varchar(18) NOT NULL, 
	NOMTRS varchar(60) NOT NULL, 
	RAZSOCTRS varchar(30) NOT NULL, 
	NOMFANTRS varchar(30), 
	DATNASFUNTRS date NOT NULL, 
	TELTRS varchar(20) NOT NULL, 
	CELTRS varchar(20), 
	EMATRS varchar(30) NOT NULL, 
	ENDTRS varchar(30) NOT NULL,
	CIDTRS varchar(40) NOT NULL, 
	LOGTRS bytea, 
	RESTRS varchar(20), 
	INSESTTRS varchar(60) NOT NULL, 
	RGTRS varchar(20), 
	CODTIPTRS int4 NOT NULL, 
	SEXTRS char(1) NOT NULL, 
	DATCADTRS date NOT NULL, 
	CONSTRAINT FARMACIA_PK PRIMARY KEY (CGCTRS)
);
COMMENT ON TABLE TRANSACIONADOR IS 'TABELA PARA CADASTRO DOS DADOS DA FARMÁCIA QUE ADQUIRIU O SISTEMA.';
COMMENT ON COLUMN TRANSACIONADOR.CGCTRS IS 'CPF/CNPJ do transacionador';
COMMENT ON COLUMN TRANSACIONADOR.RAZSOCTRS IS 'RAZAO SOCIAL DA FARMACIA';
COMMENT ON COLUMN TRANSACIONADOR.NOMFANTRS IS 'NOME FANTASIA DA FARMACIA';
COMMENT ON COLUMN TRANSACIONADOR.TELTRS IS 'TELEFONE DA FARMACIA';
COMMENT ON COLUMN TRANSACIONADOR.EMATRS IS 'E-MAIL DA FARMACIA';
COMMENT ON COLUMN TRANSACIONADOR.ENDTRS IS 'ENDEREÇO DA FARMÁCIA';
COMMENT ON COLUMN TRANSACIONADOR.CIDTRS IS 'CIDADE DE LOCALIZAÇÃO DA FARMACIA';
COMMENT ON COLUMN TRANSACIONADOR.LOGTRS IS 'LOGOTIPO DA FARMÁCIA';
COMMENT ON COLUMN TRANSACIONADOR.RESTRS IS 'RESPONSÁVEL PELA FARMÁCIA';
COMMENT ON COLUMN TRANSACIONADOR.INSESTTRS IS 'Incrição estadual';
COMMENT ON COLUMN TRANSACIONADOR.SEXTRS IS 'sexo transicionador';
COMMENT ON COLUMN TRANSACIONADOR.DATCADTRS IS 'data de cadastro do transicionador';


CREATE TABLE USUARIO (
	CODUSU SERIAL NOT NULL, 
	LOGUSU int4 NOT NULL UNIQUE, 
	SENUSU int4 NOT NULL, 
	NOMUSU varchar(50) NOT NULL, 
	PRIMARY KEY (CODUSU)
);
COMMENT ON COLUMN USUARIO.CODUSU IS 'CÓDIGO DO USUÁRIO';
COMMENT ON COLUMN USUARIO.LOGUSU IS 'LOGIN DO USUÁRIO';
COMMENT ON COLUMN USUARIO.SENUSU IS 'SENHA DO USUÁRIO';


CREATE TABLE VENDA (
	CODVEN SERIAL NOT NULL, 
	DATVEN date NOT NULL, 
	VALTOTVEN numeric(9, 2) NOT NULL, 
	CGCTRS varchar(18) NOT NULL, 
	PRIMARY KEY (CODVEN)
);
COMMENT ON TABLE VENDA IS 'tabela para armazenar os dados das vendas.';



CREATE TABLE VENDA_ITEM (
	CODITMVEN SERIAL NOT NULL, 
	VALBRTITM numeric(9, 2) NOT NULL, 
	VALLIQITM numeric(9, 2) NOT NULL, 
	VALDESITM numeric(9, 2), 
	VALACRITM numeric(9, 2), 
	CODVEN int4 NOT NULL, 
	CODPRO int4 NOT NULL, 
	PRIMARY KEY (CODITMVEN)
);
COMMENT ON TABLE VENDA_ITEM IS 'tabela para armazenar os dados dos itens das vendas';
COMMENT ON COLUMN VENDA_ITEM.VALBRTITM IS 'valor bruto do item na venda';
COMMENT ON COLUMN VENDA_ITEM.VALLIQITM IS 'valor liquido do item na venda';
COMMENT ON COLUMN VENDA_ITEM.VALDESITM IS 'valor de desconto no item na venda';
COMMENT ON COLUMN VENDA_ITEM.VALACRITM IS 'valor de acréscimo no item na venda';


CREATE TABLE LOG_AUDITORIA(
	DESLOG varchar(100),
	DATLOG timestamp,
	USRLOG integer,
	CONSTRAINT FK_LOG_USR  FOREIGN KEY (USRLOG) REFERENCES USUARIO (CODUSU)
);


CREATE INDEX PRODUTO_NOMPRO ON PRODUTO (NOMPRO);
CREATE INDEX PRODUTO_DATCADPRO ON PRODUTO (DATCADPRO);
CREATE INDEX TRANSACIONADOR_RAZSOCTRS ON TRANSACIONADOR (RAZSOCTRS);

ALTER TABLE PROMOCAO_ITEM ADD   CONSTRAINT FK_PROMOITM_PROD  FOREIGN KEY (CODPRO)    REFERENCES PRODUTO (CODPRO);
ALTER TABLE PRODUTO ADD         CONSTRAINT FK_PROD_TABPRE    FOREIGN KEY (CODTABPRE) REFERENCES TABELA_PRECO (CODTABPRE);
ALTER TABLE FUNCIONARIO ADD     CONSTRAINT FK_FUNC_TRS       FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);
ALTER TABLE CONTAS_RECEBER ADD  CONSTRAINT FK_CNTREC_TRS     FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);
ALTER TABLE PROMOCAO ADD        CONSTRAINT FK_PROMO_TABDES   FOREIGN KEY (CODTABDES) REFERENCES TABELA_DESCONTO (CODTABDES);
ALTER TABLE PROMOCAO ADD        CONSTRAINT FK_PROMO_TABPRE   FOREIGN KEY (CODTABPRE) REFERENCES TABELA_PRECO (CODTABPRE);
ALTER TABLE ESTOQUE ADD         CONSTRAINT FK_EST_TRS        FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);
ALTER TABLE PROMOCAO_ITEM ADD   CONSTRAINT FK_PROMOITM_PROMO FOREIGN KEY (CODPMC)    REFERENCES PROMOCAO (CODPMC);
ALTER TABLE PRODUTO ADD         CONSTRAINT FK_PROD_CAT       FOREIGN KEY (CODCAT)    REFERENCES CATEGORIA (CODCAT);
ALTER TABLE ESTOQUE_ITEM ADD    CONSTRAINT FK_ESTITM_PROD    FOREIGN KEY (CODPRO)    REFERENCES PRODUTO (CODPRO);
ALTER TABLE ESTOQUE_ITEM ADD    CONSTRAINT FK_ESTITM_EST     FOREIGN KEY (CODEST)    REFERENCES ESTOQUE (CODEST);
ALTER TABLE TRANSACIONADOR ADD  CONSTRAINT FK_TRS_TRSTIP     FOREIGN KEY (CODTIPTRS) REFERENCES TIPO_TRANSACIONADOR (CODTIPTRS);
ALTER TABLE VENDA ADD           CONSTRAINT FK_VENDA_TRS      FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);
ALTER TABLE VENDA_ITEM ADD      CONSTRAINT FK_VENDAITM_PROD  FOREIGN KEY (CODPRO)    REFERENCES PRODUTO (CODPRO);
ALTER TABLE VENDA_ITEM ADD      CONSTRAINT FK_VENDAITM_VENDA FOREIGN KEY (CODVEN)    REFERENCES VENDA (CODVEN);
ALTER TABLE EMPRESA_PRODUTO ADD CONSTRAINT FK_EMP_PROD       FOREIGN KEY (CODPRO)    REFERENCES PRODUTO (CODPRO);
ALTER TABLE EMPRESA_PRODUTO ADD CONSTRAINT FK_EMP_TRS        FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);
ALTER TABLE PRODUTO ADD         CONSTRAINT FK_PROD_TABDES    FOREIGN KEY (CODTABDES) REFERENCES TABELA_DESCONTO (CODTABDES);
ALTER TABLE CONTAS_PAGAR ADD    CONSTRAINT FK_CNTPAG_TRS     FOREIGN KEY (CGCTRS)    REFERENCES TRANSACIONADOR (CGCTRS);


CREATE FUNCTION trg_trs() RETURNS trigger AS $trg_trs$
BEGIN
	INSERT INTO LOG_AUDITORIA VALUES ('INSERT TRANSACIONADOR', CURRENT_TIMESTAMP, CURRENT_USER);
END;
$trg_trs$ LANGUAGE plpgsql;

CREATE TRIGGER trg_trs BEFORE INSERT ON transacionador FOR EACH ROW EXECUTE PROCEDURE trg_trs();

CREATE FUNCTION trg_prod() RETURNS trigger AS $trg_prod$
BEGIN
	INSERT INTO LOG_AUDITORIA VALUES ('INSERT PRODUTO', CURRENT_TIMESTAMP, CURRENT_USER);
END;
$trg_prod$ LANGUAGE plpgsql;

CREATE TRIGGER trg_prod BEFORE INSERT ON transacionador FOR EACH ROW EXECUTE PROCEDURE trg_prod();

drop function trg_trs() cascade;